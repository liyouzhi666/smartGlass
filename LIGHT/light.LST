C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LIGHT
OBJECT MODULE PLACED IN light.OBJ
COMPILER INVOKED BY: E:\Keil\Keil\C51\BIN\C51.EXE light.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1                                                     //***************************************
   2          // BH1750FVI IIC测试程序
   3          // 使用单片机STC89C51
   4          // 晶振：11.0592M
   5          // 显示：LCD1602
   6          // 编译环境 Keil uVision2
   7          // 参考宏晶网站24c04通信程序
   8          // 时间：2011年4月20日
   9          //****************************************
  10          #include  <REG52.H>                                                       //改:#include <reg51.h>
  11          #include  <math.h>    //Keil library
  12          #include  <stdio.h>   //Keil library
  13          #include  <INTRINS.H>
  14          #define   uchar unsigned char
  15          #define   uint unsigned int
  16          #define   DataPort P0    //LCD1602数据端口
  17          sbit      SCL=P3^7;      //IIC时钟引脚定义                                 //改：sbit SCL = P1^0;
  18          sbit      SDA=P3^6;      //IIC数据引脚定义                                 //改：sibt SDA = P1^1;
  19          sbit      LCM_RS=P1^0;   //LCD1602命令端口                                 //改：sbit LCM_RS = P2^0;
  20          sbit      LCM_RW=P1^1;   //LCD1602命令端口                                 //改：sbit LCM_RW = P2^1;
  21          sbit      LCM_EN=P1^5;   //LCD1602命令端口 */                      //改：sbit LCM_EN=P2^2;
  22                                                                                                                     
  23          #define   SlaveAddress   0x46 //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
  24                                        //ALT  ADDRESS引脚接地时地址为0x46，接电源时地址为0xB8
  25          typedef   unsigned char BYTE;
  26          typedef   unsigned short WORD;
  27          
  28          BYTE    BUF[8];                         //接收数据缓存区
  29          uchar   ge,shi,bai,qian,wan;            //显示变量
  30          int     dis_data;                       //变量
  31          
  32          unsigned long beats = 0;                //加
  33          
  34          void delay(unsigned int cnt);                                                   //加
  35          void TrunMotor(unsigned long angle);    //加
  36          
  37          void delay_nms(unsigned int k);
  38          void InitLcd();
  39          void Init_BH1750(void);
  40          
  41          void WriteDataLCM(uchar dataW);
  42          void WriteCommandLCM(uchar CMD,uchar Attribc);
  43          void DisplayOneChar(uchar X,uchar Y,uchar DData);
  44          void conversion(uint temp_data);
  45          
  46          void  Single_Write_BH1750(uchar REG_Address);               //单个写入数据
  47          uchar Single_Read_BH1750(uchar REG_Address);                //单个读取内部寄存器数据
  48          void  Multiple_Read_BH1750();                               //连续的读取内部寄存器数据
  49          //------------------------------------
  50          void Delay5us();
  51          void Delay5ms();
  52          void BH1750_Start();                    //起始信号
  53          void BH1750_Stop();                     //停止信号
  54          void BH1750_SendACK(bit ack);           //应答ACK
  55          bit  BH1750_RecvACK();                  //读ack
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 2   

  56          void BH1750_SendByte(BYTE dat);         //IIC单个字节写
  57          BYTE BH1750_RecvByte();                 //IIC单个字节读
  58          
  59          //-----------------------------------
  60          
  61          //*********************************************************
  62          void conversion(uint temp_data)  //  数据转换出 个，十，百，千，万
  63          {
  64   1          wan=temp_data/10000+0x30 ;
  65   1          temp_data=temp_data%10000;   //取余运算
  66   1              qian=temp_data/1000+0x30 ;
  67   1          temp_data=temp_data%1000;    //取余运算
  68   1          bai=temp_data/100+0x30   ;
  69   1          temp_data=temp_data%100;     //取余运算
  70   1          shi=temp_data/10+0x30    ;
  71   1          temp_data=temp_data%10;      //取余运算
  72   1          ge=temp_data+0x30;
  73   1      }
  74          
  75          //毫秒延时**************************
  76          void delay_nms(unsigned int k)
  77          {
  78   1      unsigned int i,j;
  79   1      for(i=0;i<k;i++)
  80   1      {
  81   2      for(j=0;j<121;j++)
  82   2      {;}}
  83   1      }
  84          
  85          /*******************************/
  86          void timer()
  87          {
  88   1             //配置T0工作在模式1，定时2ms
  89   1      
  90   1          TMOD = 0x01;
  91   1      
  92   1          TH0 = 0xF8;
  93   1      
  94   1           TL0 = 0xCD;
  95   1      
  96   1           TR0 = 1;
  97   1      
  98   1          ET0 = 1;
  99   1      
 100   1           EA = 1;
 101   1      }
 102          
 103          /*******************************/
 104          void TrunMotor(unsigned long angle)
 105          {
 106   1               unsigned char buf;
 107   1      
 108   1          unsigned char step = 0;
 109   1      
 110   1          unsigned long beats = 0;
 111   1      
 112   1          unsigned char code BeatCode[8] = {  //步进电机节拍对应到IO控制电平的代码
 113   1      
 114   1              0xE, 0xC, 0xD, 0x9, 0xB, 0x3, 0x7, 0x6
 115   1      
 116   1          };
 117   1      
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 3   

 118   1          
 119   1      
 120   1          beats = (angle * 4096) / 360; //计算需要的节拍数，4096拍对应一圈
 121   1      
 122   1          while (beats--)
 123   1      
 124   1          {
 125   2      
 126   2              buf  = P1 & 0xF0;       //用buf暂存P1口的高4位，而低4位清零
 127   2      
 128   2              buf |= BeatCode[step];  //buf低4位改为相应的节拍代码值
 129   2      
 130   2              P1   = buf;             //修改后完毕后的值送回到P1口
 131   2      
 132   2              step++;        //步进节拍递增
 133   2      
 134   2              step &= 0x07;  //用“与”方式实现到8归零
 135   2      
 136   2              delay(200);    //延时2ms，即2ms执行一拍
 137   2      
 138   2          }
 139   1      
 140   1          P1 |= 0x0F; //关闭电机所有的相
 141   1              
 142   1      }
 143          /********************************/
 144           void StopMotor()
 145                  { 
 146   1              beats = 0;
 147   1              }
 148          /********************************/
 149          
 150           void delay(unsigned int cnt)
 151          
 152          {
 153   1      
 154   1           while (cnt--);
 155   1      
 156   1      }
 157          
 158          /********************************/
 159          
 160          void WaitForEnable(void)        
 161          {                                       
 162   1      P0=0xff;                
 163   1      do
 164   1      {
 165   2              LCM_RS=0;
 166   2              LCM_RW=1;_nop_();
 167   2              LCM_EN=0;_nop_();_nop_();
 168   2              LCM_EN=1;
 169   2      }while(DataPort&0x80);  
 170   1      LCM_EN=0;                               
 171   1      }
 172          /*******************************/
 173          
 174          void WriteCommandLCM(uchar CMD, uchar Attribc)
 175          {
 176   1      if(Attribc)WaitForEnable();
 177   1      LCM_EN=0;
 178   1      DataPort=CMD;   
 179   1      LCM_RS=0;LCM_RW=0;_nop_();_nop_();      
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 4   

 180   1      LCM_EN=1;_nop_();_nop_();LCM_EN=0;
 181   1      }
 182          /*******************************/
 183          
 184          void WriteDataLCM(unsigned char CMD)
 185          {                                       
 186   1      WaitForEnable();
 187   1      LCM_EN=0;
 188   1      DataPort=CMD;   
 189   1      LCM_RS=1;LCM_RW=0;_nop_();_nop_();      
 190   1      LCM_EN=1;_nop_();_nop_();LCM_EN=0;
 191   1      }
 192          /***********************************/
 193          void InitLcd()
 194          {
 195   1      WriteCommandLCM(0x38,1);
 196   1      WriteCommandLCM(0x08,1);
 197   1      WriteCommandLCM(0x01,1);
 198   1      WriteCommandLCM(0x06,1);
 199   1      WriteCommandLCM(0x0c,1);
 200   1      }
 201          /***********************************/
 202          void DisplayOneChar(uchar X,uchar Y,uchar DData)
 203          {
 204   1      Y&=1;
 205   1      X&=15;
 206   1      if(Y)X|=0x40;
 207   1      X|=0x80;
 208   1      WriteCommandLCM(X,0);
 209   1      WriteDataLCM(DData);
 210   1      }
 211          
 212          /**************************************
 213          延时5微秒(STC90C52RC@12M)
 214          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
 215          当改用1T的MCU时,请调整此延时函数
 216          **************************************/
 217          void Delay5us()
 218          {
 219   1          _nop_();_nop_();_nop_();_nop_();
 220   1          _nop_();_nop_();_nop_();_nop_();
 221   1              _nop_();_nop_();_nop_();_nop_();
 222   1              _nop_();_nop_();_nop_();_nop_();
 223   1      }
 224          
 225          /**************************************
 226          延时5毫秒(STC90C52RC@12M)
 227          不同的工作环境,需要调整此函数
 228          当改用1T的MCU时,请调整此延时函数
 229          **************************************/
 230          void Delay5ms()
 231          {
 232   1          WORD n = 560;
 233   1      
 234   1          while (n--);
 235   1      }
 236          
 237          /**************************************
 238          起始信号
 239          **************************************/
 240          void BH1750_Start()
 241          {
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 5   

 242   1          SDA = 1;                    //拉高数据线
 243   1          SCL = 1;                    //拉高时钟线
 244   1          Delay5us();                 //延时
 245   1          SDA = 0;                    //产生下降沿
 246   1          Delay5us();                 //延时
 247   1          SCL = 0;                    //拉低时钟线
 248   1      }
 249          
 250          /**************************************
 251          停止信号
 252          **************************************/
 253          void BH1750_Stop()
 254          {
 255   1          SDA = 0;                    //拉低数据线
 256   1          SCL = 1;                    //拉高时钟线
 257   1          Delay5us();                 //延时
 258   1          SDA = 1;                    //产生上升沿
 259   1          Delay5us();                 //延时
 260   1      }
 261          
 262          /**************************************
 263          发送应答信号
 264          入口参数:ack (0:ACK 1:NAK)
 265          **************************************/
 266          void BH1750_SendACK(bit ack)
 267          {
 268   1          SDA = ack;                  //写应答信号
 269   1          SCL = 1;                    //拉高时钟线
 270   1          Delay5us();                 //延时
 271   1          SCL = 0;                    //拉低时钟线
 272   1          Delay5us();                 //延时
 273   1      }
 274          
 275          /**************************************
 276          接收应答信号
 277          **************************************/
 278          bit BH1750_RecvACK()
 279          {
 280   1          SCL = 1;                    //拉高时钟线
 281   1          Delay5us();                 //延时
 282   1          CY = SDA;                   //读应答信号
 283   1          SCL = 0;                    //拉低时钟线
 284   1          Delay5us();                 //延时
 285   1      
 286   1          return CY;
 287   1      }
 288          
 289          /**************************************
 290          向IIC总线发送一个字节数据
 291          **************************************/
 292          void BH1750_SendByte(BYTE dat)
 293          {
 294   1          BYTE i;
 295   1      
 296   1          for (i=0; i<8; i++)         //8位计数器
 297   1          {
 298   2              dat <<= 1;              //移出数据的最高位
 299   2              SDA = CY;               //送数据口
 300   2              SCL = 1;                //拉高时钟线
 301   2              Delay5us();             //延时
 302   2              SCL = 0;                //拉低时钟线
 303   2              Delay5us();             //延时
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 6   

 304   2          }
 305   1          BH1750_RecvACK();
 306   1      }
 307          
 308          /**************************************
 309          从IIC总线接收一个字节数据
 310          **************************************/
 311          BYTE BH1750_RecvByte()
 312          {
 313   1          BYTE i;
 314   1          BYTE dat = 0;
 315   1      
 316   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 317   1          for (i=0; i<8; i++)         //8位计数器
 318   1          {
 319   2              dat <<= 1;
 320   2              SCL = 1;                //拉高时钟线
 321   2              Delay5us();             //延时
 322   2              dat |= SDA;             //读数据
 323   2              SCL = 0;                //拉低时钟线
 324   2              Delay5us();             //延时
 325   2          }
 326   1          return dat;
 327   1      }
 328          
 329          //*********************************
 330          
 331          void Single_Write_BH1750(uchar REG_Address)
 332          {
 333   1          BH1750_Start();                  //起始信号
 334   1          BH1750_SendByte(SlaveAddress);   //发送设备地址+写信号
 335   1          BH1750_SendByte(REG_Address);    //内部寄存器地址，
 336   1        //  BH1750_SendByte(REG_data);       //内部寄存器数据，
 337   1          BH1750_Stop();                   //发送停止信号
 338   1      }
 339          
 340          //********单字节读取*****************************************
 341          /*
 342          uchar Single_Read_BH1750(uchar REG_Address)
 343          {  uchar REG_data;
 344              BH1750_Start();                          //起始信号
 345              BH1750_SendByte(SlaveAddress);           //发送设备地址+写信号
 346              BH1750_SendByte(REG_Address);                   //发送存储单元地址，从0开始
 347              BH1750_Start();                          //起始信号
 348              BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 349              REG_data=BH1750_RecvByte();              //读出寄存器数据
 350                  BH1750_SendACK(1);
 351                  BH1750_Stop();                           //停止信号
 352              return REG_data;
 353          }
 354          */
 355          //*********************************************************
 356          //
 357          //连续读出BH1750内部数据
 358          //
 359          //*********************************************************
 360          void Multiple_read_BH1750(void)
 361          {   uchar i;
 362   1          BH1750_Start();                          //起始信号
 363   1          BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 364   1      
 365   1               for (i=0; i<3; i++)                      //连续读取2个地址数据，存储中BUF
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 7   

 366   1          {
 367   2              BUF[i] = BH1750_RecvByte();          //BUF[0]存储0x32地址中的数据
 368   2              if (i == 3)
 369   2              {
 370   3      
 371   3                 BH1750_SendACK(1);                //最后一个数据需要回NOACK
 372   3              }
 373   2              else
 374   2              {
 375   3                BH1750_SendACK(0);                //回应ACK
 376   3             }
 377   2         }
 378   1      
 379   1          BH1750_Stop();                          //停止信号
 380   1          Delay5ms();
 381   1      }
 382          
 383          
 384          //初始化BH1750，根据需要请参考pdf进行修改****
 385          void Init_BH1750()
 386          {
 387   1         Single_Write_BH1750(0x01);
 388   1      
 389   1      }
 390          //*********************************************************
 391          //主程序********
 392          //*********************************************************
 393          
 394          /*void main()
 395          {
 396                  InitLcd();           //初始化LCD
 397                  WriteCommandLCM(0x80,0);
 398                  WriteDataLCM('S');
 399                  
 400                  while (1);
 401          } */
 402          void main()
 403          {
 404   1         float temp;
 405   1         delay_nms(100);          //延时100ms
 406   1         InitLcd();           //初始化LCD
 407   1         Init_BH1750();       //初始化BH1750
 408   1      
 409   1        while(1)              //循环
 410   1        {
 411   2      
 412   2          Single_Write_BH1750(0x01);   // power on
 413   2          Single_Write_BH1750(0x10);   // H- resolution mode
 414   2      
 415   2           delay_nms(180);              //延时180ms
 416   2      
 417   2          Multiple_Read_BH1750();       //连续读出数据，存储在BUF中
 418   2      
 419   2          dis_data=BUF[0];
 420   2          dis_data=(dis_data<<8)+BUF[1];//合成数据，即光照数据
 421   2      
 422   2          temp=(float)dis_data/1.2;
 423   2      
 424   2          conversion(temp);         //计算数据和显示
 425   2              DisplayOneChar(0,0,'L');
 426   2              DisplayOneChar(1,0,'i');
 427   2              DisplayOneChar(2,0,'g');
C51 COMPILER V9.00   LIGHT                                                                 04/10/2014 20:44:39 PAGE 8   

 428   2              DisplayOneChar(3,0,'h');
 429   2              DisplayOneChar(4,0,'t');
 430   2          DisplayOneChar(5,0,':');
 431   2      
 432   2          DisplayOneChar(7,0,wan); //显示数据
 433   2          DisplayOneChar(8,0,qian);
 434   2          DisplayOneChar(9,0,bai);
 435   2          DisplayOneChar(10,0,shi);
 436   2              DisplayOneChar(11,0,ge);
 437   2      
 438   2              DisplayOneChar(13,0,'l'); ////显示数单位
 439   2              DisplayOneChar(14,0,'x');
 440   2      
 441   2              if(dis_data>50)                                   //加
 442   2                       TrunMotor(90); 
 443   2              
 444   2      
 445   2        }
 446   1      }
 447                            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    853    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
